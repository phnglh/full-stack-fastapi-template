[project]
name = "backend"
version = "0.1.0"
description = ""
authors = [
    {name = "phonglh",email = "phonghngle@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard] (>=0.117.1,<0.118.0)",
    "sqlmodel (>=0.0.25,<0.0.26)",
    "pydantic (>=2.11.9,<3.0.0)",
    "pydantic-settings (>=2.11.0,<3.0.0)",
    "uvicorn[standard] (>=0.37.0,<0.38.0)",
    "pymysql (>=1.1.2,<2.0.0)",
    "mysql-connector-python (>=9.4.0,<10.0.0)",
    "alembic (>=1.16.5,<2.0.0)",
    "passlib[bcrypt] (>=1.7.4,<2.0.0)",
    "pyjwt[crypto] (>=2.10.1,<3.0.0)"
]

[tool.poetry]
packages = [{include = "app"}]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "ruff (>=0.13.2,<0.14.0)",
    "pre-commit (>=4.3.0,<5.0.0)"
]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
    "T201",   # print statements are not allowed
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
